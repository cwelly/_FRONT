{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapActions } from \"vuex\";\nconst userStore = \"userStore\";\nexport default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      // isLoginError: false,\n      user: {\n        emailid: null,\n        emaildomain: null,\n        userpassword: null\n      }\n    };\n  },\n  computed: {\n    ...mapState(userStore, [\"isLogin\", \"isLoginError\", \"userInfo\"])\n  },\n  methods: {\n    ...mapActions(userStore, [\"userConfirm\", \"getUserInfo\"]),\n    async confirm() {\n      await this.userConfirm(this.user);\n      let token = sessionStorage.getItem(\"access-token\");\n      // console.log(\"1. confirm() token >> \" + token);\n      if (this.isLogin) {\n        await this.getUserInfo(token);\n        // console.log(\"4. confirm() userInfo :: \", this.userInfo);\n        this.$router.push({\n          name: \"VueMain\"\n        });\n        console.log(this.userInfo);\n      }\n    },\n    movePage() {\n      this.$router.push({\n        name: \"join\"\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAyEA;AAEA;AAEA;EACAA;EACAC;IACA;MACA;MACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;MACA;MACA;QACA;QACA;QACA;UAAAP;QAAA;QACAQ;MACA;IACA;IACAC;MACA;QAAAT;MAAA;IACA;EACA;AACA","names":["name","data","user","emailid","emaildomain","userpassword","computed","methods","console","movePage"],"sourceRoot":"src/components/user","sources":["UserLogin.vue"],"sourcesContent":["<template>\n  <b-container class=\"bv-example-row mt-3\">\n    <b-row>\n      <b-col>\n        <b-alert variant=\"secondary\" show><h3>로그인</h3></b-alert>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col></b-col>\n      <b-col cols=\"8\">\n        <b-card class=\"text-center mt-3\" style=\"max-width: 40rem\" align=\"left\">\n          <b-form class=\"text-left\">\n            <b-alert show variant=\"danger\" v-if=\"isLoginError\">아이디 또는 비밀번호를 확인하세요.</b-alert>\n            <b-form-group label=\"아이디:\" label-for=\"userid\">\n              <b-form-input\n                id=\"userid\"\n                v-model=\"user.emailid\"\n                required\n                placeholder=\"아이디 입력....\"\n                @keyup.enter=\"confirm\"\n              ></b-form-input>\n            </b-form-group>\n            <b-form-select\n                class=\"form-select\"\n                id=\"emaildomain\"\n                name=\"emaildomain\"\n                v-model=\"user.emaildomain\"\n                aria-label=\"이메일 도메인 선택\"\n              >\n                <option>선택</option>\n                <option value=\"ssafy.com\">싸피</option>\n                <option value=\"google.com\">구글</option>\n                <option value=\"naver.com\">네이버</option>\n                <option value=\"kakao.com\">카카오</option>\n              </b-form-select>\n            <b-form-group label=\"비밀번호:\" label-for=\"userpwd\">\n              <b-form-input\n                type=\"password\"\n                id=\"userpwd\"\n                v-model=\"user.userpassword\"\n                required\n                placeholder=\"비밀번호 입력....\"\n                @keyup.enter=\"confirm\"\n              ></b-form-input>\n            </b-form-group>\n            <b-button type=\"button\" variant=\"primary\" class=\"m-1\" @click=\"confirm\">로그인</b-button>\n            <b-button type=\"button\" variant=\"success\" class=\"m-1\" @click=\"movePage\">회원가입</b-button>\n          </b-form>\n        </b-card>\n      </b-col>\n      <b-col></b-col>\n    </b-row>\n  </b-container>\n  <!-- \n  <div>\n    <h2>Login 입니다</h2>\n      <b-container class=\"bg-light\" variant=\"light\">\n\n        <b-form >\n            <b-form-group\n            id=\"input-group-1\"\n            label=\"Email address:\"\n            label-for=\"input-1\"\n          >\n          </b-form-group>\n        </b-form>\n    </b-container>\n    \n  </div>\n-->\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\";\n\nconst userStore = \"userStore\";\n\nexport default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      // isLoginError: false,\n      user: {\n        emailid: null,\n        emaildomain:null, \n        userpassword: null,\n      },\n    };\n  },\n  computed: {\n    ...mapState(userStore, [\"isLogin\", \"isLoginError\", \"userInfo\"]),\n  },\n  methods: {\n    ...mapActions(userStore, [\"userConfirm\", \"getUserInfo\"]),\n    async confirm() {\n      await this.userConfirm(this.user);\n      let token = sessionStorage.getItem(\"access-token\");\n      // console.log(\"1. confirm() token >> \" + token);\n      if (this.isLogin) {\n        await this.getUserInfo(token);\n        // console.log(\"4. confirm() userInfo :: \", this.userInfo);\n        this.$router.push({ name: \"VueMain\" });\n        console.log(this.userInfo);\n      }\n    },\n    movePage() {\n      this.$router.push({ name: \"join\" });\n    },\n  },\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}