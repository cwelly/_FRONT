{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nconst mapStore = \"mapStore\";\nexport default {\n  data() {\n    return {\n      aptList: null\n    };\n  },\n  watch: {\n    aptList(value) {\n      this.aptList = aptList;\n      this.loadMap();\n    }\n    // AptList (value) {\n    //   this.aptList = value;\n    //   console.log(\"watch 시작했어용\")\n    //   console.log(this.aptList);\n    //   this.loadMap();\n    // }\n  },\n\n  computed: {\n    // aptLists() {\n    //   return this.$store.state.aptList;\n    // },\n    // aptlist() {\n    //   console.log(\"wow\");\n    //   return this.$store.state.aptList;\n    // },\n\n    ...mapState(mapStore, [\"aptList\"])\n  },\n  methods: {\n    loadMap() {\n      if (this.aptList === null) {\n        alert(\"검색 내역이 없습니다!\");\n      } else {\n        console.log(\"시작\");\n        console.log(this.aptList);\n        // let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스\n        var myPos = new kakao.maps.LatLng(36.098594, 128.38977); //lat: 36.098594, lng: 128.38977 }\n        var options = {\n          //지도를 생성할 때 필요한 기본 옵션\n          center: myPos,\n          //지도의 중심좌표.\n          level: 3 //지도의 레벨(확대, 축소 정도)\n        };\n\n        let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        let geocoder = new kakao.maps.services.Geocoder();\n\n        //주소로 좌표 얻기\n\n        let addressArr = [];\n        let aptArr = [];\n        this.aptList.forEach(apt => {\n          let aptInfo = {};\n          let address = apt[\"sido\"] + \" \" + apt[\"gugun\"] + \" \" + apt[\"dong\"] + apt[\"jibun\"];\n          addressArr.push(address);\n          aptInfo.address = address;\n          aptInfo.aptName = apt[\"apartmentName\"];\n          aptInfo.aptPirce = apt[\"dealAmount\"];\n          aptInfo.aptSize = apt[\"area\"];\n          aptInfo.aptYear = apt[\"buildYear\"];\n          aptArr.push(aptInfo);\n          let dm = this.displayMarker;\n          //마커 생성\n          geocoder.addressSearch(aptInfo.address, function (result, status) {\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) {\n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n              dm(coords, aptInfo, map);\n            }\n          });\n        });\n      }\n    },\n    displayMarker: function (locPosition, aptInfo, map) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: locPosition\n      });\n      marker.setMap(map);\n      let mkWrap = document.createElement(\"div\");\n      mkWrap.className = \"markerWrap\";\n      let info = document.createElement(\"div\");\n      info.className = \"info\";\n      let title = document.createElement(\"div\");\n      title.className = \"title\";\n      title.innerHTML = aptInfo.aptName;\n      let closeBtn = document.createElement(\"button\");\n      closeBtn.className = \"close\";\n      closeBtn.setAttribute(\"title\", \"닫기\");\n      title.appendChild(closeBtn);\n      let body = document.createElement(\"div\");\n      body.className = \"body\";\n      body.innerHTML = `<div class=\"desc\" >\n          <div class=\"ellipsis\" style=\"width:100%;height:100%; word-break:break-all;margin-bottom:5px \"><p \">상세주소 : ${aptInfo.address} ${aptInfo.aptName}</p>\n          <p>건축년도 : ${aptInfo.aptYear}</p>\n          <p> 아파트 면적 : ${aptInfo.aptSize}</p>\n          <p>거래 금액 : ${aptInfo.aptPirce}</p>\n          </div>\n      </div>`;\n      info.appendChild(title);\n      info.appendChild(body);\n      mkWrap.appendChild(info);\n      var overlay = new kakao.maps.CustomOverlay({\n        content: mkWrap,\n        map: map,\n        position: marker.getPosition()\n      });\n\n      //오버레이 닫기\n      closeBtn.addEventListener(\"click\", () => {\n        overlay.setMap(null);\n      });\n\n      // 지도 중심좌표를 접속위치로 변경합니다\n      map.setCenter(locPosition);\n\n      //오버레이 열기\n      kakao.maps.event.addListener(marker, 'click', function () {\n        overlay.setMap(map);\n        map.setCenter(locPosition);\n      });\n      closeBtn.dispatchEvent(new Event(\"click\"));\n      return overlay;\n    } //displayMaker\n  },\n\n  mounted() {\n    if (!window.kakao || !window.kakao.maps) {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=32b7b36540e75a778fb8400e8a821a41&libraries=services\";\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      console.log(\"initMap 끝~!\");\n      document.head.appendChild(script);\n    } else {\n      console.log(\"이미 로딩됨 : \", window.kakao);\n      this.initMap();\n      console.log(this.map);\n    }\n    if (window.kakao && window.kakao.maps) {\n      console.log(\"제대로 불러옴\");\n    }\n  }\n};","map":{"version":3,"mappings":";AAWA;AACA;AAEA;EACAA;IACA;MACAC;IACA;EACA;EACAC;IACAD;MACA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EACAE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;EACA;EACAC;IACAC;MAEA;QACAC;MACA;QACAC;QACAA;QACA;QACA;QACA;QACA;UAAA;UACAC;UAAA;UACAC;QACA;;QACA;QACA;;QAGA;;QAEA;QACA;QAGA;UACA;UAEA;UAEAC;UAEAC;UACAA;UACAA;UACAA;UACAA;UAEAC;UAEA;UACA;UACAC;YACA;YACA;cACA;cACAC;YAEA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACAC;QACAC;MACA;MACAC;MAEA;MACAC;MACA;MACAC;MACA;MACAC;MACAA;MACA;MACAC;MACAA;MACAD;MAEA;MACAE;MACAA;AACA;AACA;AACA;AACA;AACA;AACA;MAEAH;MACAA;MACAD;MAGA;QACAK;QACAR;QACAC;MACA;;MAEA;MACAK;QACAG;MACA;;MAEA;MACAT;;MAEA;MACAU;QACAD;QACAT;MACA;MACAM;MACA;IACA;EACA;;EACAK;IACA;MACA;MACAC;MACA;MACAA;MACArB;MACAsB;IACA,OACA;MACAtB;MACA;MACAA;IACA;IACA;MACAA;IACA;EACA;AACA","names":["data","aptList","watch","computed","methods","loadMap","alert","console","center","level","addressArr","aptInfo","aptArr","geocoder","dm","displayMarker","map","position","marker","mkWrap","info","title","closeBtn","body","content","overlay","kakao","mounted","script","document"],"sourceRoot":"src/components/map","sources":["MapDrawMap.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>동별 검색합니다</h2>\n    <div>\n      <div id=\"map\"   style=\"width:800px;height:800px;\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { mapState } from \"vuex\";\nconst mapStore = \"mapStore\";\n\nexport default {\n  data() {\n    return {\n      aptList:null,\n    }\n  },\n  watch: {\n    aptList(value) {\n      this.aptList = aptList;\n      this.loadMap()\n    }\n    // AptList (value) {\n    //   this.aptList = value;\n    //   console.log(\"watch 시작했어용\")\n    //   console.log(this.aptList);\n    //   this.loadMap();\n    // }\n  },\n  computed: {\n    // aptLists() {\n    //   return this.$store.state.aptList;\n    // },\n    // aptlist() {\n    //   console.log(\"wow\");\n    //   return this.$store.state.aptList;\n    // },\n\n    ...mapState(mapStore, [\"aptList\"]),\n  },\n  methods: {\n    loadMap() {\n\n      if (this.aptList=== null) {\n        alert(\"검색 내역이 없습니다!\")\n      } else {\n        console.log(\"시작\");\n        console.log(this.aptList);\n        // let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스\n        var myPos = new kakao.maps.LatLng(36.098594, 128.38977) //lat: 36.098594, lng: 128.38977 }\n        var options = { //지도를 생성할 때 필요한 기본 옵션\n          center: myPos, //지도의 중심좌표.\n          level: 3 //지도의 레벨(확대, 축소 정도)\n        };\n        let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        let geocoder = new kakao.maps.services.Geocoder();\n\n\n        //주소로 좌표 얻기\n\n        let addressArr = [];\n        let aptArr = [];\n\n\n        this.aptList.forEach((apt) => {\n          let aptInfo = {};\n\n          let address = apt[\"sido\"] + \" \" + apt[\"gugun\"] + \" \" + apt[\"dong\"] + apt[\"jibun\"];\n\n          addressArr.push(address);\n\n          aptInfo.address = address;\n          aptInfo.aptName = apt[\"apartmentName\"];\n          aptInfo.aptPirce = apt[\"dealAmount\"];\n          aptInfo.aptSize = apt[\"area\"];\n          aptInfo.aptYear = apt[\"buildYear\"];\n\n          aptArr.push(aptInfo);\n          \n          let dm = this.displayMarker;\n          //마커 생성\n          geocoder.addressSearch(aptInfo.address, function (result, status) {\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) { \n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n              dm(coords, aptInfo, map);\n\n            }\n          });\n        });\n      }\n    },\n    displayMarker: function (locPosition, aptInfo, map) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: locPosition,\n      });\n      marker.setMap(map);\n\n      let mkWrap = document.createElement(\"div\")\n      mkWrap.className = \"markerWrap\"\n      let info = document.createElement(\"div\")\n      info.className = \"info\"\n      let title = document.createElement(\"div\")\n      title.className = \"title\"\n      title.innerHTML = aptInfo.aptName;\n      let closeBtn = document.createElement(\"button\")\n      closeBtn.className = \"close\"\n      closeBtn.setAttribute(\"title\", \"닫기\")\n      title.appendChild(closeBtn);\n\n      let body = document.createElement(\"div\")\n      body.className = \"body\"\n      body.innerHTML = `<div class=\"desc\" >\n          <div class=\"ellipsis\" style=\"width:100%;height:100%; word-break:break-all;margin-bottom:5px \"><p \">상세주소 : ${aptInfo.address} ${aptInfo.aptName}</p>\n          <p>건축년도 : ${aptInfo.aptYear}</p>\n          <p> 아파트 면적 : ${aptInfo.aptSize}</p>\n          <p>거래 금액 : ${aptInfo.aptPirce}</p>\n          </div>\n      </div>`;\n\n      info.appendChild(title);\n      info.appendChild(body);\n      mkWrap.appendChild(info);\n\n\n      var overlay = new kakao.maps.CustomOverlay({\n        content: mkWrap,\n        map: map,\n        position: marker.getPosition()\n      });\n\n      //오버레이 닫기\n      closeBtn.addEventListener(\"click\", () => {\n        overlay.setMap(null);\n      })\n\n      // 지도 중심좌표를 접속위치로 변경합니다\n      map.setCenter(locPosition);\n\n      //오버레이 열기\n      kakao.maps.event.addListener(marker, 'click', function () {\n        overlay.setMap(map);\n        map.setCenter(locPosition);\n      });\n      closeBtn.dispatchEvent(new Event(\"click\"));\n      return overlay;\n    }, //displayMaker\n  },\n  mounted() {\n    if (!window.kakao || !window.kakao.maps) {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=32b7b36540e75a778fb8400e8a821a41&libraries=services\";\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      console.log(\"initMap 끝~!\");\n      document.head.appendChild(script);\n    }\n    else {\n      console.log(\"이미 로딩됨 : \", window.kakao);\n      this.initMap(); \n      console.log(this.map);\n    }\n    if (window.kakao &&window.kakao.maps) {\n      console.log(\"제대로 불러옴\");\n    }\n  },\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}