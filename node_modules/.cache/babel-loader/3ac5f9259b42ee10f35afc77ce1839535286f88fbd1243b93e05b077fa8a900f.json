{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      aptList: null\n    };\n  },\n  watch: {\n    aptList: function (value) {\n      console.log(value);\n      this.setaptList(value);\n    }\n  },\n  computed: {\n    AptList: {\n      get() {\n        return this.$store.state.aptList;\n      },\n      set(value) {\n        this.aptList = value;\n      }\n    }\n  },\n  methods: {\n    ...mapMutations({\n      setaptList: \"SET_APTLIST\"\n    }),\n    loadMap() {\n      // if (apts == null) {\n      if (this.aptList === null) {\n        alert(\"검색 내역이 없습니다!\");\n      } else {\n        console.log(this.aptList);\n        // let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스\n        var myPos = new kakao.maps.LatLng(36.098594, 128.38977); //lat: 36.098594, lng: 128.38977 }\n        var options = {\n          //지도를 생성할 때 필요한 기본 옵션\n          center: myPos,\n          //지도의 중심좌표.\n          level: 3 //지도의 레벨(확대, 축소 정도)\n        };\n\n        let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        let geocoder = new kakao.maps.services.Geocoder();\n\n        //주소로 좌표 얻기\n\n        let addressArr = [];\n        let aptArr = [];\n        this.aptList.forEach(apt => {\n          let aptInfo = {};\n          let address = apt[\"sido\"] + \" \" + apt[\"gugun\"] + \" \" + apt[\"dong\"] + apt[\"jibun\"];\n          addressArr.push(address);\n          aptInfo.address = address;\n          aptInfo.aptName = apt[\"apartmentName\"];\n          aptInfo.aptPirce = apt[\"dealAmount\"];\n          aptInfo.aptSize = apt[\"area\"];\n          aptInfo.aptYear = apt[\"buildYear\"];\n          aptArr.push(aptInfo);\n          let dm = this.displayMarker;\n          //마커 생성\n          geocoder.addressSearch(aptInfo.address, function (result, status) {\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) {\n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n              //아파트 이름,\n\n              // let overlay = this.displayMarker(coords, aptInfo, map);\n              let overlay = dm(coords, aptInfo, map);\n\n              //클릭 이벤트\n              tr.addEventListener(\"click\", () => {\n                //클릭시 map에 중심을 바꿔라\n                map.panTo(coords);\n                //클릭시 오버레이 열기\n                overlay.setMap(map);\n              });\n            } else {\n              console.log(\"검색이 안됨\");\n              console.log(aptInfo.address);\n            }\n          });\n          tbody.appendChild(tr);\n        });\n      }\n    }\n  },\n  mounted() {\n    if (!window.kakao || !window.kakao.maps) {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=32b7b36540e75a778fb8400e8a821a41&libraries=services\";\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      console.log(\"initMap 끝~!\");\n      document.head.appendChild(script);\n    } else {\n      console.log(\"이미 로딩됨 : \", window.kakao);\n      this.initMap();\n      console.log(this.map);\n    }\n    if (window.kakao && window.kakao.maps) {\n      console.log(\"제대로 불러옴\");\n    }\n  }\n};","map":{"version":3,"mappings":";AAQA;AACA;EACAA;IACA;MACAC;IACA;EACA;EACAC;IACAD;MACAE;MACA;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;EACA;EACAC;IACA;MACAC;IACA;IACAC;MAEA;MACA;QACAC;MACA;QACAR;QACA;QACA;QACA;QACA;UAAA;UACAS;UAAA;UACAC;QACA;;QACA;QACA;;QAGA;;QAEA;QACA;QAGA;UACA;UAEA;UAEAC;UAEAC;UACAA;UACAA;UACAA;UACAA;UAEAC;UAEA;UACA;UACAC;YACA;YACA;cACA;cACA;;cAEA;cACA;;cAGA;cACAC;gBACA;gBACAC;gBACA;gBACAC;cACA;YACA;cACAjB;cACAA;YACA;UACA;UACAkB;QACA;MACA;IACA;EACA;EACAC;IACA;MACA;MACAC;MACA;MACAA;MACApB;MACAqB;IACA,OACA;MACArB;MACA;MACAA;IACA;IACA;MACAA;IACA;EACA;AACA","names":["data","aptList","watch","console","computed","AptList","get","set","methods","setaptList","loadMap","alert","center","level","addressArr","aptInfo","aptArr","geocoder","tr","map","overlay","tbody","mounted","script","document"],"sourceRoot":"src/components/map","sources":["MapDrawMap.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>동별 검색합니다</h2>\n    <div id=\"map\"  style=\"width:500px;height:500px;\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      aptList:null,\n    }\n  },\n  watch: {\n    aptList: function (value) {\n      console.log(value);\n      this.setaptList(value);\n    }\n  },\n  computed: {\n    AptList: {\n      get() {\n        return this.$store.state.aptList;\n      },\n      set(value) {\n        this.aptList = value;\n      }\n    }\n  },\n  methods: {\n    ...mapMutations({\n      setaptList: \"SET_APTLIST\",\n    }),\n    loadMap() {\n\n      // if (apts == null) {\n      if (this.aptList=== null) {\n        alert(\"검색 내역이 없습니다!\")\n      } else {\n        console.log(this.aptList);\n        // let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스\n        var myPos = new kakao.maps.LatLng(36.098594, 128.38977) //lat: 36.098594, lng: 128.38977 }\n        var options = { //지도를 생성할 때 필요한 기본 옵션\n          center: myPos, //지도의 중심좌표.\n          level: 3 //지도의 레벨(확대, 축소 정도)\n        };\n        let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        let geocoder = new kakao.maps.services.Geocoder();\n\n\n        //주소로 좌표 얻기\n\n        let addressArr = [];\n        let aptArr = [];\n\n\n        this.aptList.forEach((apt) => {\n          let aptInfo = {};\n\n          let address = apt[\"sido\"] + \" \" + apt[\"gugun\"] + \" \" + apt[\"dong\"] + apt[\"jibun\"];\n\n          addressArr.push(address);\n\n          aptInfo.address = address;\n          aptInfo.aptName = apt[\"apartmentName\"];\n          aptInfo.aptPirce = apt[\"dealAmount\"];\n          aptInfo.aptSize = apt[\"area\"];\n          aptInfo.aptYear = apt[\"buildYear\"];\n\n          aptArr.push(aptInfo);\n          \n          let dm = this.displayMarker;\n          //마커 생성\n          geocoder.addressSearch(aptInfo.address, function (result, status) {\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) {\n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n              //아파트 이름,\n\n              // let overlay = this.displayMarker(coords, aptInfo, map);\n              let overlay = dm(coords, aptInfo, map);\n\n\n              //클릭 이벤트\n              tr.addEventListener(\"click\", () => {\n                //클릭시 map에 중심을 바꿔라\n                map.panTo(coords);\n                //클릭시 오버레이 열기\n                overlay.setMap(map);\n              })\n            } else {\n              console.log(\"검색이 안됨\")\n              console.log(aptInfo.address);\n            }\n          });\n          tbody.appendChild(tr);\n        });\n      }\n    }\n  },\n  mounted() {\n    if (!window.kakao || !window.kakao.maps) {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=32b7b36540e75a778fb8400e8a821a41&libraries=services\";\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      console.log(\"initMap 끝~!\");\n      document.head.appendChild(script);\n    }\n    else {\n      console.log(\"이미 로딩됨 : \", window.kakao);\n      this.initMap(); \n      console.log(this.map);\n    }\n    if (window.kakao &&window.kakao.maps) {\n      console.log(\"제대로 불러옴\");\n    }\n  },\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}