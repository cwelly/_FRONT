{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/util/http-common\";\nexport default {\n  data() {\n    return {\n      ///\n      name: 'BootstrapVue',\n      show: true,\n      ///\n      form: {\n        sido: '시 선택',\n        gugun: '군 선택',\n        dong: '동 선택',\n        checked: []\n      },\n      sidos_code: [],\n      sidos: [],\n      guguns_code: [],\n      guguns: [],\n      dongs_code: [],\n      dongs: []\n    };\n  },\n  ////\n  watch: {\n    show(newVal) {\n      console.log('Alert is now ' + (newVal ? 'visible' : 'hidden'));\n    }\n  },\n  ////\n  created() {\n    http.get(`/region.do/sido`).then(({\n      data\n    }) => {\n      data.regions.forEach(region => {\n        this.sidos.push(region.name);\n        this.sidos_code.push(region.code);\n      });\n    });\n  },\n  methods: {\n    onSidoChangeGetGugun() {\n      console.log(\"이제 구군을 구해보자!\");\n      let code = '';\n      console.log(this.guguns);\n      if (this.guguns.length != 0) {\n        console.log(\"이미 구군리스트에 값이 있으니 초기화 할게!\");\n        this.guguns.splice(0);\n        this.guguns_code.splice(0);\n      }\n      for (let index = 0; index < this.sidos.length; index++) {\n        if (this.sidos[index] == this.form.sido) {\n          code = this.sidos_code[index];\n        }\n      }\n      if (code === '') {\n        alert(\"없는 시입니다.\");\n      } else {\n        http.get(`/region.do/gugun/${code}`).then(({\n          data\n        }) => {\n          data.regions.forEach(region => {\n            this.guguns.push(region.name);\n            this.guguns_code.push(region.code);\n          });\n        });\n      }\n    },\n    onGugunChangeGetDong() {\n      console.log(\"이제 동을 구해보자!\");\n      let code = '';\n      if (this.dongs.length != 0) {\n        console.log(\"이미 동리스트에 값이 있으니 초기화 할게!\");\n        this.dongs.splice(0);\n        this.dongs_code.splice(0);\n      }\n      for (let index = 0; index < this.guguns.length; index++) {\n        if (this.guguns[index] == this.form.gugun) {\n          code = this.guguns_code[index];\n        }\n      }\n      if (code === '') {\n        alert(\"없는 구입니다.\");\n      } else {\n        http.get(`/region.do/dong/${code}`).then(({\n          data\n        }) => {\n          data.regions.forEach(region => {\n            this.dongs.push(region.name);\n            this.dongs_code.push(region.code);\n          });\n        });\n      }\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      alert(JSON.stringify(this.form));\n    },\n    onReset(event) {\n      event.preventDefault();\n      // Reset our form values\n      this.form.email = '';\n      this.form.name = '';\n      this.form.food = null;\n      this.form.checked = [];\n      // Trick to reset/clear native browser form validation state\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    },\n    toggle() {\n      console.log('Toggle button clicked');\n      this.show = !this.show;\n    },\n    dismissed() {\n      console.log('Alert dismissed');\n    }\n  }\n};","map":{"version":3,"mappings":";AA+DA;AACA;EACAA;IACA;MACA;MACAC;MACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC,cAEA;MACAC,SAEA;MACAC,eAEA;MACAC,UAEA;MACAC,cAEA;MACAC;IAGA;EACA;EACA;EACAC;IACAZ;MACAa;IACA;EACA;EACA;EACAC;IACAC;MAAAjB;IAAA;MACAA;QACA;QACA;MACA;IACA;EACA;EACAkB;IACAC;MACAJ;MACA;MACAA;MACA;QACAA;QACA;QACA;MACA;MACA;QACA;UACAK;QACA;MACA;MACA;QACAC;MACA,OACA;QACAJ;UAAAjB;QAAA;UACAA;YACA;YACA;UACA;QACA;MACA;IACA;IACAsB;MACAP;MACA;MACA;QACAA;QACA;QACA;MACA;MACA;QACA;UAEAK;QACA;MACA;MACA;QACAC;MACA,OACA;QACAJ;UAAAjB;QAAA;UACAA;YACA;YACA;UACA;QACA;MACA;IACA;IACAuB;MACAC;MACAH;IACA;IACAI;MACAD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;IACA;IACAE;MACAX;MACA;IACA;IACAY;MACAZ;IACA;EACA;AACA","names":["data","name","show","form","sido","gugun","dong","checked","sidos_code","sidos","guguns_code","guguns","dongs_code","dongs","watch","console","created","http","methods","onSidoChangeGetGugun","code","alert","onGugunChangeGetDong","onSubmit","event","onReset","toggle","dismissed"],"sourceRoot":"src/components","sources":["BootstrapVue.vue"],"sourcesContent":["<template>\n    <div>\n        <b-button variant=\"primary\">Button</b-button>\n        <b-button size=\"sm\" @click=\"toggle\">\n            {{ show ? 'Hide' : 'Show' }} Alert\n          </b-button>\n          <b-alert\n            v-model=\"show\"\n            class=\"mt-3\"\n            dismissible\n            @dismissed=\"dismissed\"\n          >\n            Hello {{ name }}!\n          </b-alert>\n  <h1>\n    여기는 components/BootstrapVue.vue 입니다\n  </h1>\n    <b-form inline>\n        <b-form-select\n        id=\"inline-form-custom-select-pref\"\n        class=\"mb-2 mr-sm-2 mb-sm-0\"\n        :options=\"sidos\"\n        v-model=\"form.sido\"\n        @change=\"onSidoChangeGetGugun\"\n        :value=\"null\"\n        ></b-form-select>\n        <label class=\"mr-sm-3\" for=\"inline-form-custom-select-pref\">시</label>\n        \n        \n        <b-form-select\n        id=\"inline-form-custom-select-pref\"\n        class=\"mb-2 mr-sm-2 mb-sm-0\"\n        @change=\"onGugunChangeGetDong\"\n        :options=\"guguns\"\n        v-model=\"form.gugun\"\n        ></b-form-select>\n        <label class=\"mr-sm-3\" for=\"inline-form-custom-select-pref\">시</label>\n\n        <b-form-select\n        id=\"inline-form-custom-select-pref\"\n        class=\"mb-2 mr-sm-2 mb-sm-0\"\n        :options=\"dongs\"\n        v-model=\"form.dong\"\n        ></b-form-select>\n        <label class=\"mr-sm-3\" for=\"inline-form-custom-select-pref\">시</label>\n\n        <!-- <b-form-group id=\"input-group-3\" label=\"시는?:\" label-for=\"input-3\">\n            <b-form-select\n            id=\"input-3\"\n            v-model=\"form.sido\"\n            :options=\"sidos\"\n            required\n            ></b-form-select>\n        </b-form-group> -->\n    </b-form>\n    <b-card class=\"mt-3\" header=\"Form Data Result\">\n        <pre class=\"m-0\">{{ form }}</pre>\n      </b-card>\n</div>\n  \n</template>\n\n<script>\nimport http from \"@/util/http-common\";\nexport default {\n    data() {\n        return {\n            ///\n            name: 'BootstrapVue',\n            show: true,\n            ///\n            form: {\n                sido: '시 선택',\n                gugun: '군 선택',\n                dong: '동 선택',\n                checked: []\n            },\n            sidos_code: [\n                \n            ],\n            sidos: [\n                \n            ],\n            guguns_code: [\n                \n            ],\n            guguns: [\n                \n            ],\n            dongs_code: [\n                \n            ],\n            dongs: [\n                \n            ],\n        }\n    },\n    ////\n    watch: {\n    show(newVal) {\n      console.log('Alert is now ' + (newVal ? 'visible' : 'hidden'))\n    }\n    },\n    ////\n    created() {\n        http.get(`/region.do/sido`).then(({ data }) => {\n            data.regions.forEach(region => {\n                this.sidos.push(region.name);\n                this.sidos_code.push(region.code);\n            });\n        });\n    },\n    methods: {\n        onSidoChangeGetGugun() {\n            console.log(\"이제 구군을 구해보자!\")\n            let code = '';\n            console.log(this.guguns);\n            if (this.guguns.length != 0) {\n                console.log(\"이미 구군리스트에 값이 있으니 초기화 할게!\");\n                this.guguns.splice(0);\n                this.guguns_code.splice(0);\n            }\n            for (let index = 0; index < this.sidos.length; index++) {\n                if (this.sidos[index] == this.form.sido) {\n                    code = this.sidos_code[index];\n                }\n            }\n            if (code === '') {\n                alert(\"없는 시입니다.\")\n            }\n            else {\n                http.get(`/region.do/gugun/${code}`).then(({ data }) => {\n                    data.regions.forEach(region => {\n                        this.guguns.push(region.name);\n                        this.guguns_code.push(region.code);\n                    });\n                });\n            }\n        },\n        onGugunChangeGetDong() {\n            console.log(\"이제 동을 구해보자!\");\n            let code = '';\n            if (this.dongs.length != 0) {\n                console.log(\"이미 동리스트에 값이 있으니 초기화 할게!\");\n                this.dongs.splice(0);\n                this.dongs_code.splice(0);\n            }\n            for (let index = 0; index < this.guguns.length; index++) {\n                if (this.guguns[index] == this.form.gugun) {\n                    \n                    code = this.guguns_code[index];\n                }\n            }\n            if (code === '') {\n                alert(\"없는 구입니다.\")\n            }\n            else {\n                http.get(`/region.do/dong/${code}`).then(({ data }) => {\n                    data.regions.forEach(region => {\n                        this.dongs.push(region.name);\n                        this.dongs_code.push(region.code);\n                    });\n                });\n            }\n        },\n      onSubmit(event) {\n        event.preventDefault()\n        alert(JSON.stringify(this.form))\n      },\n      onReset(event) {\n        event.preventDefault()\n        // Reset our form values\n        this.form.email = ''\n        this.form.name = ''\n        this.form.food = null\n        this.form.checked = []\n        // Trick to reset/clear native browser form validation state\n        this.show = false\n        this.$nextTick(() => {\n          this.show = true\n        })\n        },\n        toggle() {\n      console.log('Toggle button clicked')\n      this.show = !this.show\n    },\n    dismissed() {\n      console.log('Alert dismissed')\n    }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}