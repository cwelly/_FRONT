{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations } from \"vuex\";\nimport http from \"@/util/http-common\";\nexport default {\n  name: 'IndexVue',\n  data() {\n    return {\n      // 토글 결과를 저장\n      isDongSearch: true,\n      // 현재 map 정보를 저장\n      map: null,\n      // 검색 결과를 저장\n      result: null,\n      // 로그인 결과를 저장\n      userInfo: null,\n      now: this\n      /////////////////////////////////////////////\n      /////////////////////////////////////////////\n    };\n  },\n\n  methods: {\n    ...mapMutations({\n      setUserInfo: \"SET_USERINFO\"\n    }),\n    /////////////////////////////////////////////\n    validateInput({\n      emailId,\n      password,\n      username,\n      address,\n      phone\n    }) {\n      if (!emailId || !password || !username || !address || !phone) return false;else return true;\n    },\n    getValueFromInput(query) {\n      return document.querySelector(query).value;\n    },\n    /////////////////////////////////////////////\n    SubmitLogin() {\n      let formData = document.getElementById('login-form');\n      console.log(document.getElementById('emaildomain').value);\n      let url = `/user.do/login/${formData[\"emailid\"].value}/${formData[\"emaildomain\"].value}/${formData[\"password\"].value}`;\n      http.get(url).then(({\n        data\n      }) => {\n        console.log(data);\n        if (data.resMsg == \"로그인 성공!!!\") {\n          alert(\"로그인 성공!!!\");\n          this.UserInfo = data.userInfo;\n        } else if (data.resMsg == \"로그인 실패\") {\n          alert(\"로그인 실패\");\n        }\n      });\n    },\n    /////////////////////////////////////////////\n    SubmitJoin() {\n      const user = {\n        emailId: this.getValueFromInput(\"#join-emailid\"),\n        password: this.getValueFromInput(\"#join-password\"),\n        username: this.getValueFromInput(\"#join-username\"),\n        address: this.getValueFromInput(\"#join-address\"),\n        phone: this.getValueFromInput(\"#join-phone\")\n      };\n      if (!this.validateInput(user)) {\n        alert(\"빈칸이 없도록 입력해주세요!\");\n        return;\n      }\n      let formData = document.getElementById('join-form');\n      let url = `/user.do/join/${encodeURIComponent(formData[\"emailid\"].value)}/${encodeURIComponent(formData[\"emaildomain\"].value)}/${encodeURIComponent(formData[\"password\"].value)}/${encodeURIComponent(formData[\"name\"].value)}/${encodeURIComponent(formData[\"addr\"].value)}/${encodeURIComponent(formData[\"phone\"].value)}`;\n      http.post(url).then(({\n        data\n      }) => {\n        if (data.resMsg == \"회원등록완료\") {\n          alert(\"회원등록 성공!\");\n        } else if (data.resMsg == \"중복회원\") {\n          alert(\"이미 있는 회원입니다!\");\n        }\n      });\n    },\n    /////////////////////////////////////////////\n    //회원정보수정\n    SubmitUpdate() {\n      //info-emaildomain\n      const user = {\n        emailId: this.getValueFromInput(\"#info-emailid\"),\n        password: this.getValueFromInput(\"#info-password\"),\n        username: this.getValueFromInput(\"#info-username\"),\n        address: this.getValueFromInput(\"#info-address\"),\n        phone: this.getValueFromInput(\"#info-phone\")\n      };\n      console.log(user);\n      if (!this.validateInput(user)) {\n        alert(\"빈칸이 없도록 입력해주세요!\");\n        return;\n      }\n      // let url = `/user.do/update/${encodeURIComponent(formData[\"emailid\"].value)}/${encodeURIComponent(formData[\"emaildomain\"].value)}/${encodeURIComponent(formData[\"password\"].value)}/${encodeURIComponent(formData[\"name\"].value)}/${encodeURIComponent(formData[\"addr\"].value)}/${encodeURIComponent(formData[\"phone\"].value)}`;\n      let url = `/user.do/update/${user.emailId}/${this.userInfo.email.domain}/${user.password}/${user.username}/${user.address}/${user.phone}`;\n      http.post(url).then(({\n        data\n      }) => {\n        if (data.resMsg == \"개인정보수정완료\") {\n          alert(\"수정 완료되었습니다!\");\n          this.UserInfo = data.userInfo;\n        } else {\n          alert(\"수정 실패했습니다!\");\n        }\n      });\n    },\n    /////////////////////////////////////////////\n    //로그아웃\n    logout() {\n      alert(\"로그아웃 되었습니다!\");\n      this.UserInfo = null;\n    },\n    //회원탈퇴(회원삭제)\n    withdrawal() {\n      if (confirm(\"정말 탈퇴하시겠습니까?\")) {\n        console.log(\"탈퇴하신다야\");\n        // http.get(\"/user.do/withdrawal\").then(({ data }) => {\n        http.get(\"/user.do/withdrawal\", {\n          params: {\n            emailid: this.userInfo.email.id,\n            emaildomain: this.userInfo.email.domain\n          }\n        }).then(({\n          data\n        }) => {\n          if (data.resMsg == \"삭제완료\") {\n            alert(\"삭제 완료되었습니다!\");\n            this.logout();\n          } else {\n            alert;\n          }\n        });\n      }\n    },\n    /////////////////////////////////////////////\n    sortBuildYear() {\n      // http.get(`/map.do/buildYear`).then(({ data }) => {\n      //   console.log(data);\n      //   this.makeList(data)\n      // });\n    },\n    sortArea() {\n      // http.get(`/map.do/area`).then(({ data }) => {\n      //   console.log(data);\n      //   this.makeList(data)\n      // });\n    },\n    sortDealAmount() {\n      // http.get(`/map.do/dealAmount`).then(({ data }) => {\n      //   console.log(data);\n      //   this.makeList(data)\n      // });\n    },\n    goSearchByName() {\n      let aptName = document.querySelector(\"#searchAPTName\").value;\n      http.get(`/map.do/searchName/${aptName}`).then(({\n        data\n      }) => {\n        console.log(data);\n        this.makeList(data);\n      });\n    },\n    goSearchByAddr() {\n      let sidoSel = document.querySelector(\"#sido\");\n      let sido = sidoSel.options[sidoSel.selectedIndex].text;\n      let gugunSel = document.querySelector(\"#gugun\");\n      let gugun = gugunSel.options[gugunSel.selectedIndex].text;\n      let dongSel = document.querySelector(\"#dong\");\n      let dong = dongSel.options[dongSel.selectedIndex].text;\n      if (sido == \"시도선택\" || gugun == \"구군선택\" || dong == \"동선택\") {\n        alert(\"시/도 , 구/군 , 동을 정확히 설정해주세요!\");\n        console.log(sido, gugun, dong);\n        return;\n      }\n      http.get(`/map.do/searchDong/${dong}`).then(({\n        data\n      }) => {\n        console.log(data);\n        this.makeList(data);\n      });\n    },\n    toggleSearch() {\n      this.isDongSearch = !this.isDongSearch;\n    },\n    onGugunChanged() {\n      let gugunSel = document.querySelector(\"#gugun\");\n      let gugunCode = gugunSel.options[gugunSel.selectedIndex].value;\n      http.get(`/region.do/dong/${gugunCode}`).then(({\n        data\n      }) => {\n        console.log(data.regions);\n        let dongSel = document.querySelector(\"#dong\");\n        while (dongSel.firstChild) {\n          dongSel.removeChild(dongSel.firstChild);\n        }\n        let init = document.createElement(\"option\");\n        init.textContent = \"동선택\";\n        dongSel.appendChild(init);\n        data.regions.forEach(dong => {\n          let option = document.createElement(\"option\");\n          option.textContent = dong.name;\n          option.value = dong.code;\n          dongSel.appendChild(option);\n        });\n      });\n    },\n    //onGugunChanged\n\n    onSidoChanged() {\n      let sidoSel = document.querySelector(\"#sido\");\n      let sidoCode = sidoSel.options[sidoSel.selectedIndex].value;\n      let dongSel = document.querySelector(\"#dong\");\n      while (dongSel.firstChild) {\n        dongSel.removeChild(dongSel.firstChild);\n      }\n      let init = document.createElement(\"option\");\n      init.textContent = \"동선택\";\n      dongSel.appendChild(init);\n      http.get(`/region.do/gugun/${sidoCode}`).then(({\n        data\n      }) => {\n        console.log(data);\n        let gugunSel = document.querySelector(\"#gugun\");\n        while (gugunSel.firstChild) {\n          gugunSel.removeChild(gugunSel.firstChild);\n        }\n        let init = document.createElement(\"option\");\n        init.textContent = \"구군선택\";\n        gugunSel.appendChild(init);\n        data.regions.forEach(gugun => {\n          let option = document.createElement(\"option\");\n          option.textContent = gugun.name;\n          option.value = gugun.code;\n          gugunSel.appendChild(option);\n        });\n      });\n    },\n    //onSidoChanged\n    showResult() {\n      document.querySelector(\"#aptListSection\").setAttribute(\"style\", \"display: flex;\");\n    },\n    hideResult() {\n      document.querySelector(\"#aptListSection\").setAttribute(\"style\", \"display: none;\");\n    },\n    init() {\n      let map = document.querySelector(\"#map\");\n      map.innerHTML = ``;\n      let tbody = document.querySelector(\"#aptlist\");\n      let len = tbody.rows.length;\n      for (let i = len - 1; i >= 0; i--) {\n        tbody.deleteRow(i);\n      }\n    },\n    makeList(data) {\n      let apts = data.aptList;\n      let tbody = document.querySelector(\"#aptlist\");\n      this.init();\n      // if (apts == null) {\n      if (apts.length === 0) {\n        alert(\"검색 내역이 없습니다!\");\n        this.hideResult();\n      } else {\n        this.showResult();\n        this.result = data.aptList;\n        console.log(this.result);\n        // let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스\n        var myPos = new kakao.maps.LatLng(36.098594, 128.38977); //lat: 36.098594, lng: 128.38977 }\n        var options = {\n          //지도를 생성할 때 필요한 기본 옵션\n          center: myPos,\n          //지도의 중심좌표.\n          level: 3 //지도의 레벨(확대, 축소 정도)\n        };\n\n        let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        let geocoder = new kakao.maps.services.Geocoder();\n\n        //주소로 좌표 얻기\n\n        let addressArr = [];\n        let aptArr = [];\n        apts.forEach(apt => {\n          let aptInfo = {};\n          let address = apt[\"sido\"] + \" \" + apt[\"gugun\"] + \" \" + apt[\"dong\"] + apt[\"jibun\"];\n          addressArr.push(address);\n          aptInfo.address = address;\n          aptInfo.aptName = apt[\"apartmentName\"];\n          aptInfo.aptPirce = apt[\"dealAmount\"];\n          aptInfo.aptSize = apt[\"area\"];\n          aptInfo.aptYear = apt[\"buildYear\"];\n          aptArr.push(aptInfo);\n          let tr = document.createElement(\"tr\");\n          let nameTd = document.createElement(\"td\");\n          nameTd.appendChild(document.createTextNode(apt[\"apartmentName\"]));\n          tr.appendChild(nameTd);\n          let floorTd = document.createElement(\"td\");\n          floorTd.appendChild(document.createTextNode(apt[\"buildYear\"]));\n          tr.appendChild(floorTd);\n          let areaTd = document.createElement(\"td\");\n          areaTd.appendChild(document.createTextNode(apt[\"area\"]));\n          tr.appendChild(areaTd);\n          let dongTd = document.createElement(\"td\");\n          dongTd.appendChild(document.createTextNode(apt[\"dong\"]));\n          tr.appendChild(dongTd);\n          let priceTd = document.createElement(\"td\");\n          priceTd.appendChild(document.createTextNode(apt[\"dealAmount\"] + \"만원\"));\n          priceTd.classList.add(\"text-end\");\n          tr.appendChild(priceTd);\n          let dm = this.displayMarker;\n          //마커 생성\n          geocoder.addressSearch(aptInfo.address, function (result, status) {\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) {\n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n              //아파트 이름,\n\n              // let overlay = this.displayMarker(coords, aptInfo, map);\n              let overlay = dm(coords, aptInfo, map);\n\n              //클릭 이벤트\n              tr.addEventListener(\"click\", () => {\n                //클릭시 map에 중심을 바꿔라\n                map.panTo(coords);\n                //클릭시 오버레이 열기\n                overlay.setMap(map);\n              });\n            } else {\n              console.log(\"검색이 안됨\");\n              console.log(aptInfo.address);\n            }\n          });\n          tbody.appendChild(tr);\n        });\n      }\n    },\n    //makelist\n\n    displayMarker: function (locPosition, aptInfo, map) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: locPosition\n      });\n      marker.setMap(map);\n      let mkWrap = document.createElement(\"div\");\n      mkWrap.className = \"markerWrap\";\n      let info = document.createElement(\"div\");\n      info.className = \"info\";\n      let title = document.createElement(\"div\");\n      title.className = \"title\";\n      title.innerHTML = aptInfo.aptName;\n      let closeBtn = document.createElement(\"button\");\n      closeBtn.className = \"close\";\n      closeBtn.setAttribute(\"title\", \"닫기\");\n      title.appendChild(closeBtn);\n      let body = document.createElement(\"div\");\n      body.className = \"body\";\n      body.innerHTML = `<div class=\"desc\" >\n          <div class=\"ellipsis\" style=\"width:100%;height:100%; word-break:break-all;margin-bottom:5px \"><p \">상세주소 : ${aptInfo.address} ${aptInfo.aptName}</p>\n          <p>건축년도 : ${aptInfo.aptYear}</p>\n          <p> 아파트 면적 : ${aptInfo.aptSize}</p>\n          <p>거래 금액 : ${aptInfo.aptPirce}</p>\n          </div>\n      </div>`;\n      info.appendChild(title);\n      info.appendChild(body);\n      mkWrap.appendChild(info);\n      var overlay = new kakao.maps.CustomOverlay({\n        content: mkWrap,\n        map: map,\n        position: marker.getPosition()\n      });\n\n      //오버레이 닫기\n      closeBtn.addEventListener(\"click\", () => {\n        overlay.setMap(null);\n      });\n\n      // 지도 중심좌표를 접속위치로 변경합니다\n      map.setCenter(locPosition);\n\n      //오버레이 열기\n      kakao.maps.event.addListener(marker, 'click', function () {\n        overlay.setMap(map);\n        map.setCenter(locPosition);\n      });\n      closeBtn.dispatchEvent(new Event(\"click\"));\n      return overlay;\n    },\n    //displayMaker\n\n    async initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3\n      };\n      this.map = new kakao.maps.Map(container, options);\n    },\n    on(type, el, listener, all = false) {\n      let selectEl = this.select(el, all);\n      if (selectEl) {\n        if (all) {\n          selectEl.forEach(e => e.addEventListener(type, listener));\n        } else {\n          selectEl.addEventListener(type, listener);\n        }\n      }\n    },\n    select(el, all = false) {\n      el = el.trim();\n      if (all) {\n        return [...document.querySelectorAll(el)];\n      } else {\n        return document.querySelector(el);\n      }\n    },\n    toogleNav() {\n      let navButton = this.select('.nav-toggle');\n      navButton.classList.toggle('nav-toggle-active');\n      navButton.querySelector('i').classList.toggle('bx-x');\n      navButton.querySelector('i').classList.toggle('bx-menu');\n      this.select('.nav-menu').classList.toggle('nav-menu-active');\n    },\n    registInterestRegion() {\n      let dongSel = document.querySelector(\"#dong\");\n      let dongcode = dongSel.options[dongSel.selectedIndex].value;\n      console.log(dongcode);\n      let url = `/user.do/registregion/${dongcode}`;\n      http.get(url, {\n        params: {\n          emailid: this.userInfo.email.id,\n          emaildomain: this.userInfo.email.domain\n        }\n      }).then(({\n        data\n      }) => {\n        if (data.resMsg == \"Success OK\") {\n          alert(\"즐겨찾기 성공 !\");\n          this.UserInfo = data.userInfo;\n        } else if (data.resMsg == \"이미 있는 dong 입니다 \") {\n          alert(\"이미 있는 지역입니다\");\n        }\n      });\n    },\n    searchInterestRegion(dong) {\n      http.get(`/map.do/searchDong/${dong}`).then(({\n        data\n      }) => {\n        this.makeList(data);\n      });\n    }\n  },\n  created() {\n    http.get(`/region.do/sido`).then(({\n      data\n    }) => {\n      let sidoSel = document.querySelector(\"#sido\");\n      let init = document.createElement(\"option\");\n      init.textContent = \"시도선택\";\n      sidoSel.appendChild(init);\n      data.regions.forEach(sido => {\n        let option = document.createElement(\"option\");\n        option.textContent = sido.name;\n        option.value = sido.code;\n        sidoSel.appendChild(option);\n      });\n    });\n  },\n  watch: {\n    userInfo: function (value) {\n      console.log(\"바뀐 Userinfo\");\n      console.log(value);\n      this.setUserInfo(value);\n    }\n  },\n  computed: {\n    // getUserInfo() {\n    //   return this.userInfo;\n    // }\n    UserInfo: {\n      get() {\n        return this.$store.state.userInfo;\n      },\n      set(value) {\n        this.userInfo = value;\n      }\n    }\n  },\n  mounted() {\n    this.userInfo = this.$store.state.userInfo;\n    if (!window.kakao || !window.kakao.maps) {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=32b7b36540e75a778fb8400e8a821a41&libraries=services\";\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      console.log(\"initMap 끝~!\");\n      document.head.appendChild(script);\n    } else {\n      console.log(\"이미 로딩됨 : \", window.kakao);\n      this.initMap();\n      console.log(this.map);\n    }\n    if (window.kakao && window.kakao.maps) {\n      console.log(\"제대로 불러옴\");\n    }\n    // jquery?////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    var now = this;\n    this.on('click', '.nav-menu .drop-down > a', function (e) {\n      e.preventDefault();\n      this.nextElementSibling.classList.toggle('drop-down-active');\n      this.parentElement.classList.toggle('active');\n    }, true);\n    this.on('click', '.scrollto', function () {\n      if (now.select(\"#\" + this.id)) {\n        now.select('.nav-menu .active').classList.remove('active');\n        this.parentElement.classList.toggle('active');\n        now.toogleNav();\n      }\n    }, true);\n\n    // jquery?////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }\n};","map":{"version":3,"mappings":";AAsSA;AACA;AACA;EACAA;EACAC;IACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACAC;MACA;MACA;IACA;EACA;;EACAC;IACA;MACAC;IACA;IACA;IACAC;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;IAAA;MACA,gFACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACAC;MAEA;MACAC;QAAAjB;MAAA;QACAgB;QACA;UACAE;UACA;QACA,OACA;UACAA;QACA;MACA;IACA;IACA;IACAC;MACA;QACAV;QACAC;QACAC;QACAC;QACAC;MACA;MAEA;QACAK;QACA;MACA;MAEA;MACA;MACAD;QAAAjB;MAAA;QACA;UACAkB;QACA,OACA;UACAA;QACA;MACA;IACA;IACA;IACA;IACAE;MACA;MACA;QACAX;QACAC;QACAC;QACAC;QACAC;MACA;MACAG;MACA;QACAE;QACA;MACA;MACA;MACA;MACAD;QAAAjB;MAAA;QACA;UACAkB;UACA;QACA,OACA;UACAA;QACA;MACA;IACA;IAEA;IACA;IACAG;MACAH;MACA;IACA;IACA;IACAI;MACA;QACAN;QACA;QACAC;UACAM;YACAC;YACAC;UACA;QAAA;UAAAzB;QAAA;UACA;YACAkB;YACA;UACA,OACA;YACAA;UACA;QACA;MACA;IACA;IACA;IACAQ;MACA;MACA;MACA;MACA;IAAA,CACA;IACAC;MACA;MACA;MACA;MACA;IAAA,CACA;IACAC;MACA;MACA;MACA;MACA;IAAA,CACA;IACAC;MACA;MACAZ;QAAAjB;MAAA;QACAgB;QACA;MACA;IACA;IACAc;MACA;MACA;MAEA;MACA;MAEA;MACA;MAEA;QACAZ;QACAF;QACA;MACA;MACAC;QAAAjB;MAAA;QACAgB;QACA;MACA;IACA;IACAe;MACA;IACA;IAEAC;MACA;MACA;MACAf;QAAAjB;MAAA;QACAgB;QACA;QAEA;UACAiB;QACA;QAEA;QACAC;QACAD;QAEAjC;UACA;UACAmC;UACAA;UAEAF;QACA;MACA;IACA;IAAA;;IAEAG;MACA;MACA;MACA;MAEA;QACAH;MACA;MACA;MACAC;MACAD;MACAhB;QAAAjB;MAAA;QACAgB;QACA;QAEA;UACAqB;QACA;QAEA;QACAH;QACAG;QAEArC;UACA;UACAmC;UACAA;UAEAE;QACA;MACA;IACA;IAAA;IACAC;MACAC;IACA;IACAC;MACAD;IACA;IACAL;MACA;MACAhC;MACA;MACA;MACA;QACAuC;MACA;IACA;IAEAC;MAEA;MAGA;MAEA;MACA;MACA;QACAxB;QACA;MACA;QACA;QACA;QACAF;QACA;QACA;QACA;QACA;UAAA;UACA2B;UAAA;UACAC;QACA;;QACA;QACA;;QAGA;;QAEA;QACA;QAGAC;UACA;UAEA;UAEAC;UAEAC;UACAA;UACAA;UACAA;UACAA;UAEAC;UACA;UAEA;UACAC;UACAC;UAEA;UACAC;UACAD;UAEA;UACAE;UACAF;UAEA;UACAG;UACAH;UAEA;UACAI,oBACAf,kDACA;UACAe;UACAJ;UACA;UACA;UACAK;YACA;YACA;cACA;cACA;;cAEA;cACA;;cAGA;cACAL;gBACA;gBACAhD;gBACA;gBACAsD;cACA;YACA;cACAxC;cACAA;YACA;UACA;UACAyB;QACA;MACA;IACA;IAAA;;IAEAgB;MACA;MACA;QACAvD;QACAwD;MACA;MACAC;MAEA;MACAC;MACA;MACAC;MACA;MACAC;MACAA;MACA;MACAC;MACAA;MACAD;MAEA;MACAE;MACAA;AACA;AACA;AACA;AACA;AACA;AACA;MAEAH;MACAA;MACAD;MAGA;QACAK;QACA/D;QACAwD;MACA;;MAEA;MACAK;QACAP;MACA;;MAEA;MACAtD;;MAEA;MACAgE;QACAV;QACAtD;MACA;MACA6D;MACA;IACA;IAAA;;IAEA;MACA;MACA;QACApB;QACAC;MACA;MAEA;IACA;IACAuB;MACA;MACA;QACA;UACAC;QACA;UACAA;QACA;MACA;IACA;IACAC;MAEAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACAC;MACAA;MACAA;MAEA;IACA;IACAC;MACA;MACA;MAEAzD;MACA;MACAC;QACAM;UACAC;UACAC;QACA;MAAA;QAAAzB;MAAA;QACA;UACAkB;UACA;QACA,OACA;UACAA;QACA;MACA;IACA;IACAwD;MACAzD;QAAAjB;MAAA;QACA;MACA;IACA;EACA;EACA2E;IACA1D;MAAAjB;IAAA;MACA;MACA;MACAkC;MAEA0C;MACA5E;QACA;QACAmC;QACAA;QAEAyC;MACA;IACA;EAEA;EACAC;IACAzE;MACAY;MACAA;MACA;IACA;EACA;EACA8D;IACA;IACA;IACA;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;EACA;EACAC;IACA;IACA;MACA;MACAC;MACA;MACAA;MACAnE;MACAuB;IACA,OACA;MACAvB;MACA;MACAA;IACA;IACA;MACAA;IACA;IACA;;IAIA;IAEA;MACAoE;MACA;MACA;IACA;IAEA;MACA;QACA/E;QACA;QACAA;MACA;IACA;;IAEA;EAEA;AACA","names":["name","data","isDongSearch","map","result","userInfo","now","methods","setUserInfo","validateInput","emailId","password","username","address","phone","getValueFromInput","SubmitLogin","console","http","alert","SubmitJoin","SubmitUpdate","logout","withdrawal","params","emailid","emaildomain","sortBuildYear","sortArea","sortDealAmount","goSearchByName","goSearchByAddr","toggleSearch","onGugunChanged","dongSel","init","option","onSidoChanged","gugunSel","showResult","document","hideResult","tbody","makeList","center","level","apts","addressArr","aptInfo","aptArr","nameTd","tr","floorTd","areaTd","dongTd","priceTd","geocoder","overlay","displayMarker","position","marker","mkWrap","info","title","closeBtn","body","content","kakao","on","selectEl","select","el","toogleNav","navButton","registInterestRegion","searchInterestRegion","created","sidoSel","watch","computed","UserInfo","get","set","mounted","script","e"],"sourceRoot":"src/components","sources":["Index.vue"],"sourcesContent":["<template>\n  <div >\n    <header id=\"header\">\n      <div class=\"container-fluid\">\n  \n        <div class=\"logo\">\n          <h1><a href=\"index.html\">홈즈</a></h1>\n        </div>\n  \n        <button type=\"button\" class=\"nav-toggle\" @click=\"toogleNav\"><i class=\"bx bx-menu\"></i></button>\n        <nav class=\"nav-menu\">\n          <ul id=\"menu-item\">\n            <li>\n              <button id=\"btn1\" block variant=\"outline-light\" ><li>About</li></button>\n            </li>\n\n            <li>\n              <button id=\"btn1\" block variant=\"outline-light\" ><li>Notice</li></button>\n            </li>\n\n            <!--<b-button block variant=\"outline-light\" v-b-modal.modal-login><li>Login</li></b-button>-->\n            \n                       <!--  로그인 했을때 리스트-->\n                       <div id=\"btn1\" v-if=\"userInfo != null\">\n                        <li id=\"user-info\">\n                          <a>{{userInfo.name}}님</a>\n                          <ul>\n                            <!-- <li><a href=\"#\" >Info</a></li> -->\n                            <div>\n                              <button id=\"btn1\" block variant=\"outline-light\" v-b-modal.modal-Info><li>Info</li></button>\n                            </div>\n                            <!-- <li><a href=\"#\" id=\"logout-btn\">Logout</a></li> -->\n                            <div>\n                              <button id=\"btn1\" block variant=\"outline-light\" @click=\"logout\"><li>Logout</li></button>\n                            </div>\n                            <!-- <li><a href=\"#\" id=\"withdrawal-btn\">Withdrawal</a></li> -->\n                            <div>\n                              <button id=\"btn1\" block variant=\"outline-light\" @click=\"withdrawal\"><li>Withdrawal</li></button>\n                            </div>\n                          </ul>\n                        </li>\n                      </div>\n          \n                      <!--  로그인 안했을때 리스트!\n                      -->\n                      <div v-if=\"userInfo == null\">\n                        <!-- <li id=\"login-li\"><a id=\"login-btn\" class=\"scrollto\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#loginModal\">Login</a></li> -->\n                        <button id=\"btn1\" block variant=\"outline-light\" v-b-modal.modal-login><li>Login</li></button>\n                        <div>\n                          <button id=\"btn1\" block variant=\"outline-light\" v-b-modal.modal-join><li>Join</li></button>\n                          <!--<li id=\"join-li\"><a id=\"join-btn\" class=\"scrollto\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#joinModal\">Join</a></li>-->\n                        </div>\n                      </div>\n                    </ul>\n                  </nav>\n                  <!-- .nav-menu -->\n                </div>\n              </header>\n\n    <section id=\"hero\">\n      <div class=\"hero-container\">\n        <h1>구해줘 홈즈!</h1>\n        <h2>김우진 최현호</h2>\n          <div class=\"row no-gutters\"><div>\n              \n              \n            </div>\n            \n           <div class=\"row no-gutters\" id=\"searchByRegion\" v-show=\"isDongSearch\" >\n             <button class=\"search-type\" id=\"searchByAPTNameBtn\"  style=\"size:100px;\" @click=\"toggleSearch\">아파트 이름 검색</button>\n             <div class = \"col-md-3\">\n                <select class = \"form-group pr-md-1 form-select\" name=\"sido\" id=\"sido\" v-model=\"sido\" @change=\"onSidoChanged\"></select>\n              </div>\n              <div class = \"col-md-3\">\n                <select class = \"col-md-4 form-group pr-md-1 form-select\" name=\"gugun\" id=\"gugun\" @change=\"onGugunChanged\" >\n                  <option value=\"\">구군선택</option>\n                </select>\n              </div>\n              <div class = \"col-md-3\">\n                <select class = \"col-md-4 form-group pr-md-1 form-select\" name=\"dong\" id=\"dong\">\n                  <option value=\"\">동선택</option>\n                </select>\n              </div>\n              <div class=\"row col-md-3 text-center\">\n                <button  id=\"goSearchByAddr\" type=\"button\" class=\"btn btn-secondary\" @click=\"goSearchByAddr\" v-if=\"userInfo == null\">검색</button>\n              \n                <button  id=\"goSearchByAddr\" type=\"button\" class=\"btn btn-secondary col-md-4\" v-if=\"userInfo != null\" @click=\"goSearchByAddr\">검색</button>\n                <button  id=\"registInterestRegion\" type=\"button\" class=\"btn btn-secondary col-md-7\" @click=\"registInterestRegion\" v-if=\"userInfo != null\">즐겨찾기 등록</button>\n               \n                <!-- 관심지역 추가하는 부분\n                  <c:if test=\"${empty user }\">\n                </c:if>\n                <c:if test=\"${!empty user }\">\n                </c:if> \n              -->\n              </div>\n           </div>\n           \n           <div class=\"row no-gutters hide\" id=\"searchByAPTName\" v-show=\"!isDongSearch\" >\n             <button class=\"search-type\" id=\"searchByRegionBtn\" onclick=\"toggleSearchBox();\" @click=\"toggleSearch\">지역 검색</button>\n             <div class = \"col-md-8\">\n                <input class=\"form-control\" id=\"searchAPTName\" type=\"text\">\n              </div>\n              <div class=\"col-md-4 text-center row\">\n                <button id=\"goSearchByAPTName\" type=\"button\" class=\"btn btn-secondary col-md-12\" @click=\"goSearchByName\">검색</button>\n              </div>\n           </div>\n  \n          </div>\n          \n          <!-- 관심지역부분 -->\n          <div class=\"row no-gutters\" id=\"interestRegionDiv\" v-if=\"userInfo != null && isDongSearch==true \">\n            <span >\n              <button \n              v-for=\"(item,index) in userInfo.interestRegion\" :key=\"index\"\n                class=\"col-md-3 regionBtn\" \n                @click=\"searchInterestRegion(`${item.dongName }`)\">\n                {{item.dongName }}\n              </button>\n            </span>\n          </div>\n          \n        <!-- </form> -->\n      </div>\n    </section><!-- #hero -->\n\n    <section>\n      <div class=\"container\">\n        <div id = \"aptListSection\" class=\"row\" style = \"display: none;\">\n          <div id = \"tableWrap\" class=\"col-lg-6\">\n            <table class=\"table table-hover text-center\">\n              <tr>\n                <th>아파트이름</th>\n                <th id=\"buildYear\" @click=\"sortDealAmount\">건축년도</th>\n                <th id=\"area\" @click=\"sortArea\">면적</th>\n                <th>법정동</th>\n                <th  id=\"dealAmount\" @click=\"sortBuildYear\">거래금액</th>\n              </tr>\n              <tbody id=\"aptlist\"></tbody>\n            </table>\n          </div>\n          <div id=\"mapWrap\" class=\"col-lg-6\">\n            <div id=\"map\"  style=\"width:500px;height:500px;\">\n            </div>\n          </div>\n        </div>\n      </div>\n          \n      \n    </section>\n\n    <!-- ======= Footer ======= -->\n  <footer id=\"footer\">\n    <div class=\"container\" style=\"\">\n      <div class=\"copyright\">\n        &copy;  <strong><span>SSAFY</span></strong>. 구해줘 홈즈! 김우진 최현호 <small>prod by 김종성 서준배</small>\n      </div>\n      <div class=\"credits\">\n        <!-- All the links in the footer should remain intact. -->\n        <!-- You can delete the links only if you purchased the pro version. -->\n        <!-- Licensing information: https://bootstrapmade.com/license/ -->\n        <!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/free-bootstrap-landing-page/ -->\n        Designed by <a href=\"https://bootstrapmade.com/\">BootstrapMade</a>\n      </div>\n    </div>\n  </footer><!-- End #footer -->\n\n    <!-- ======= Login Modal ======= -->\n    <b-modal\n      id=\"modal-login\"\n      ref=\"modal\"\n      title=\"Submit Your Name\"\n      @ok=\"SubmitLogin\"\n    >\n      <form id=\"login-form\" ref=\"form\"  @submit.stop.prevent=\"SubmitLogin\">\n          <div class=\"input-group\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"emailid\"\n                name=\"emailid\"\n                placeholder=\"이메일아이디\"\n              />\n              <span class=\"input-group-text\">@</span>\n              <select\n                class=\"form-select\"\n                id=\"emaildomain\"\n                name=\"emaildomain\"\n                aria-label=\"이메일 도메인 선택\"\n              >\n                <option>선택</option>\n                <option value=\"ssafy.com\">싸피</option>\n                <option value=\"google.com\">구글</option>\n                <option value=\"naver.com\">네이버</option>\n                <option value=\"kakao.com\">카카오</option>\n              </select>\n            </div>\n          <input type=\"password\" class=\"form-control\" name=\"password\" id=\"login-password\" placeholder=\"Password\" required>\t\n      </form>\n    </b-modal>\n    <!-- ======= Login Modal End ======= -->\n\n\n    <!-- ======= Join Modal ======= -->\n    <b-modal\n      id=\"modal-join\"\n      ref=\"modal\"\n      title=\"Submit Your Info\"\n      @ok=\"SubmitJoin\"\n    >\n      <form id=\"join-form\" ref=\"form\"  @submit.stop.prevent=\"SubmitJoin\">\n          <div class=\"input-group\">\n            <input\n              type=\"text\"\n              class=\"form-control md\"\n              id=\"join-emailid\"\n              name=\"emailid\"\n              placeholder=\"이메일아이디\"\n            />\n            <span class=\"input-group-text\">@</span>\n            <select\n              class=\"form-select\"\n              id=\"join-emaildomain\"\n              name=\"emaildomain\"\n              aria-label=\"이메일 도메인 선택\"\n            >\n              <option selected>선택</option>\n              <option value=\"ssafy.com\">싸피</option>\n              <option value=\"google.com\">구글</option>\n              <option value=\"naver.com\">네이버</option>\n              <option value=\"kakao.com\">카카오</option>\n            </select>\n          </div>\n      <input type=\"password\" class=\"form-control\" name=\"password\" id=\"join-password\" placeholder=\"Password\" required>\n      <input type=\"text\" class=\"form-control\" name=\"name\" id=\"join-username\" placeholder=\"Username\" required>\n      <input type=\"text\" class=\"form-control\" name=\"addr\" id=\"join-address\" placeholder=\"Address\" required>\n      <input type=\"tel\" pattern=\"010-[0-9]{4}-[0-9]{4}\" class=\"form-control\" name=\"phone\" id=\"join-phone\" placeholder=\"Phone\" required>\n      </form>\n    </b-modal>\n    <!-- ======= Join Modal End ======= -->\n\n<!-- ======= Info Modal ======= -->\n<div v-if=\"userInfo!=null\">\n<b-modal\n      id=\"modal-Info\"\n      ref=\"modal\"\n      title=\"Update Your Info\"\n      @ok=\"SubmitUpdate\"\n    >\n      <form id=\"submit-form\" ref=\"form\"  @submit.stop.prevent=\"SubmitUpdate\">\n          <!-- <input type=\"email\" class=\"form-control\" name=\"email\" id=\"login-email\" placeholder=\"Email\" required>  -->\n          <div class=\"input-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"info-emailid\"\n              name=\"emailid\"\n              :value=\"UserInfo.email.id\" \n              placeholder=\"이메일아이디\"\n            />\n            <span class=\"input-group-text\">@</span>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"info-emaildomain\"\n              name=\"emaildomain\"\n              :value=\"UserInfo.email.domain\" \n               readonly=\"readonly\"\n            />\n            <!-- <select\n              class=\"form-select\"\n              id=\"info-emaildomain\"\n              name=\"emaildomain\"\n              aria-label=\"이메일 도메인 선택\"\n            >\n              <option selected>선택</option>\n              <option value=\"ssafy.com\">싸피</option>\n              <option value=\"google.com\">구글</option>\n              <option value=\"naver.com\">네이버</option>\n              <option value=\"kakao.com\">카카오</option>\n            </select> -->\n          </div>\n        <input type=\"password\" class=\"form-control\" name=\"password\" id=\"info-password\" placeholder=\"Password\" required>\n        <input type=\"text\" class=\"form-control\" name=\"name\" id=\"info-username\" placeholder=\"Username\" :value=\"UserInfo.name\" required>\n        <input type=\"text\" class=\"form-control\" name=\"addr\" id=\"info-address\" placeholder=\"Address\" :value=\"UserInfo.addr\"  required>\n        <input type=\"tel\" pattern=\"010-[0-9]{4}-[0-9]{4}\" class=\"form-control\" name=\"phone\" id=\"info-phone\" :value=\"UserInfo.phone\"  placeholder=\"Phone\" required>\n      </form>\n    </b-modal>\n  </div>\n<!-- ======= Info Modal ======= -->\n  </div>\n</template>\n\n<script>\nimport { mapMutations } from \"vuex\";\nimport http from \"@/util/http-common\";\nexport default {\n  name: 'IndexVue',\n  data() {\n    return {\n      // 토글 결과를 저장\n      isDongSearch: true,\n      // 현재 map 정보를 저장\n      map: null,\n      // 검색 결과를 저장\n      result: null,\n      // 로그인 결과를 저장\n      userInfo: null,\n      now: this,\n      /////////////////////////////////////////////\n      /////////////////////////////////////////////\n    };\n  },\n  methods: {\n    ...mapMutations({\n      setUserInfo: \"SET_USERINFO\",\n    }),\n    /////////////////////////////////////////////\n    validateInput({ emailId, password, username, address, phone }) {\n      if (!emailId || !password || !username || !address || !phone) return false;\n      else return true;\n    },\n    getValueFromInput(query) {\n      return document.querySelector(query).value;\n    },\n    /////////////////////////////////////////////\n    SubmitLogin() {\n      let formData = document.getElementById('login-form');\n      console.log(document.getElementById('emaildomain').value);\n      \n      let url = `/user.do/login/${formData[\"emailid\"].value}/${formData[\"emaildomain\"].value}/${formData[\"password\"].value}`;\n      http.get(url).then(({ data }) => {\n        console.log(data);\n        if (data.resMsg == \"로그인 성공!!!\") {\n          alert(\"로그인 성공!!!\");\n          this.UserInfo=data.userInfo;\n        }\n        else if (data.resMsg == \"로그인 실패\") {\n          alert(\"로그인 실패\");\n        }\n      });\n    },\n    /////////////////////////////////////////////\n    SubmitJoin() {\n      const user = {\n        emailId: this.getValueFromInput(\"#join-emailid\"),\n        password: this.getValueFromInput(\"#join-password\"),\n        username: this.getValueFromInput(\"#join-username\"),\n        address: this.getValueFromInput(\"#join-address\"),\n        phone: this.getValueFromInput(\"#join-phone\")\n      }\n\n      if (!this.validateInput(user)) {\n        alert(\"빈칸이 없도록 입력해주세요!\");\n        return;\n      }\n\n      let formData = document.getElementById('join-form');\n      let url = `/user.do/join/${encodeURIComponent(formData[\"emailid\"].value)}/${encodeURIComponent(formData[\"emaildomain\"].value)}/${encodeURIComponent(formData[\"password\"].value)}/${encodeURIComponent(formData[\"name\"].value)}/${encodeURIComponent(formData[\"addr\"].value)}/${encodeURIComponent(formData[\"phone\"].value)}`;\n      http.post(url).then(({ data }) => {\n        if (data.resMsg == \"회원등록완료\") {\n          alert(\"회원등록 성공!\");\n        }\n        else if (data.resMsg == \"중복회원\") {\n          alert(\"이미 있는 회원입니다!\");\n        }\n      });\n    },\n    /////////////////////////////////////////////\n    //회원정보수정\n    SubmitUpdate() {\n      //info-emaildomain\n      const user = {\n        emailId: this.getValueFromInput(\"#info-emailid\"),\n        password: this.getValueFromInput(\"#info-password\"),\n        username: this.getValueFromInput(\"#info-username\"),\n        address: this.getValueFromInput(\"#info-address\"),\n        phone: this.getValueFromInput(\"#info-phone\")\n      }\n      console.log(user);\n      if (!this.validateInput(user)) {\n        alert(\"빈칸이 없도록 입력해주세요!\");\n        return;\n      }\n      // let url = `/user.do/update/${encodeURIComponent(formData[\"emailid\"].value)}/${encodeURIComponent(formData[\"emaildomain\"].value)}/${encodeURIComponent(formData[\"password\"].value)}/${encodeURIComponent(formData[\"name\"].value)}/${encodeURIComponent(formData[\"addr\"].value)}/${encodeURIComponent(formData[\"phone\"].value)}`;\n      let url = `/user.do/update/${user.emailId}/${this.userInfo.email.domain}/${user.password}/${user.username}/${user.address}/${user.phone}`;\n      http.post(url).then(({ data }) => {\n        if (data.resMsg == \"개인정보수정완료\") {\n          alert(\"수정 완료되었습니다!\");\n          this.UserInfo = data.userInfo;\n        }\n        else {\n          alert(\"수정 실패했습니다!\");\n        }\n      });\n    },\n\n    /////////////////////////////////////////////\n    //로그아웃\n    logout() {\n      alert(\"로그아웃 되었습니다!\");\n      this.UserInfo = null;\n    },\n    //회원탈퇴(회원삭제)\n    withdrawal() {\n      if (confirm(\"정말 탈퇴하시겠습니까?\")) {\n        console.log(\"탈퇴하신다야\")\n        // http.get(\"/user.do/withdrawal\").then(({ data }) => {\n          http.get(\"/user.do/withdrawal\",  {\n        params: {\n          emailid: this.userInfo.email.id,\n          emaildomain: this.userInfo.email.domain,\n      }}).then(({ data }) => {\n          if (data.resMsg == \"삭제완료\") {\n            alert(\"삭제 완료되었습니다!\");\n            this.logout();\n          }\n          else {\n            alert\n          }\n        });\n      }\n    },\n    /////////////////////////////////////////////\n    sortBuildYear() {\n      // http.get(`/map.do/buildYear`).then(({ data }) => {\n      //   console.log(data);\n      //   this.makeList(data)\n      // });\n    },\n    sortArea() {\n      // http.get(`/map.do/area`).then(({ data }) => {\n      //   console.log(data);\n      //   this.makeList(data)\n      // });\n    },\n    sortDealAmount() {\n      // http.get(`/map.do/dealAmount`).then(({ data }) => {\n      //   console.log(data);\n      //   this.makeList(data)\n      // });\n    },\n    goSearchByName() {\n      let aptName = document.querySelector(\"#searchAPTName\").value;\n      http.get(`/map.do/searchName/${aptName}`).then(({ data }) => {\n        console.log(data);\n        this.makeList(data)\n      });\n    },\n    goSearchByAddr() {\n      let sidoSel = document.querySelector(\"#sido\");\n      let sido = sidoSel.options[sidoSel.selectedIndex].text;\n\n      let gugunSel = document.querySelector(\"#gugun\");\n      let gugun = gugunSel.options[gugunSel.selectedIndex].text;\n\n      let dongSel = document.querySelector(\"#dong\");\n      let dong = dongSel.options[dongSel.selectedIndex].text;\n\n      if (sido == \"시도선택\" || gugun == \"구군선택\" || dong == \"동선택\") {\n        alert(\"시/도 , 구/군 , 동을 정확히 설정해주세요!\");\n        console.log(sido, gugun, dong);\n        return;\n      }\n      http.get(`/map.do/searchDong/${dong}`).then(({ data }) => {\n        console.log(data);\n        this.makeList(data)\n      });\n    },\n    toggleSearch() {\n      this.isDongSearch = !this.isDongSearch;\n    },\n\n    onGugunChanged() {\n      let gugunSel = document.querySelector(\"#gugun\");\n      let gugunCode = gugunSel.options[gugunSel.selectedIndex].value;\n      http.get(`/region.do/dong/${gugunCode}`).then(({ data }) => {\n        console.log(data.regions);\n        let dongSel = document.querySelector(\"#dong\");\n\n        while (dongSel.firstChild) {\n          dongSel.removeChild(dongSel.firstChild);\n        }\n\n        let init = document.createElement(\"option\");\n        init.textContent = \"동선택\";\n        dongSel.appendChild(init);\n\n        data.regions.forEach(dong => {\n          let option = document.createElement(\"option\");\n          option.textContent = dong.name;\n          option.value = dong.code;\n\n          dongSel.appendChild(option);\n        })\n      });\n    },//onGugunChanged\n\n    onSidoChanged() {\n      let sidoSel = document.querySelector(\"#sido\");\n      let sidoCode = sidoSel.options[sidoSel.selectedIndex].value;\n      let dongSel = document.querySelector(\"#dong\");\n\n      while (dongSel.firstChild) {\n        dongSel.removeChild(dongSel.firstChild);\n      }\n      let init = document.createElement(\"option\");\n      init.textContent = \"동선택\";\n      dongSel.appendChild(init);\n      http.get(`/region.do/gugun/${sidoCode}`).then(({ data }) => {\n        console.log(data);\n        let gugunSel = document.querySelector(\"#gugun\");\n\n        while (gugunSel.firstChild) {\n          gugunSel.removeChild(gugunSel.firstChild);\n        }\n\n        let init = document.createElement(\"option\");\n        init.textContent = \"구군선택\";\n        gugunSel.appendChild(init);\n\n        data.regions.forEach(gugun => {\n          let option = document.createElement(\"option\");\n          option.textContent = gugun.name;\n          option.value = gugun.code;\n\n          gugunSel.appendChild(option);\n        })\n      })\n    }, //onSidoChanged\n    showResult() {\n      document.querySelector(\"#aptListSection\").setAttribute(\"style\", \"display: flex;\");\n    },\n    hideResult() {\n      document.querySelector(\"#aptListSection\").setAttribute(\"style\", \"display: none;\");\n    },\n    init() {\n      let map = document.querySelector(\"#map\");\n      map.innerHTML = ``;\n      let tbody = document.querySelector(\"#aptlist\");\n      let len = tbody.rows.length;\n      for (let i = len - 1; i >= 0; i--) {\n        tbody.deleteRow(i);\n      }\n    },\n\n    makeList(data) {\n\n      let apts = data.aptList;\n\n\n      let tbody = document.querySelector(\"#aptlist\");\n\n      this.init();\n      // if (apts == null) {\n      if (apts.length === 0) {\n        alert(\"검색 내역이 없습니다!\")\n        this.hideResult()\n      } else {\n        this.showResult();\n        this.result = data.aptList;\n        console.log(this.result);\n        // let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스\n        var myPos = new kakao.maps.LatLng(36.098594, 128.38977) //lat: 36.098594, lng: 128.38977 }\n        var options = { //지도를 생성할 때 필요한 기본 옵션\n          center: myPos, //지도의 중심좌표.\n          level: 3 //지도의 레벨(확대, 축소 정도)\n        };\n        let map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴\n        let geocoder = new kakao.maps.services.Geocoder();\n\n\n        //주소로 좌표 얻기\n\n        let addressArr = [];\n        let aptArr = [];\n\n\n        apts.forEach((apt) => {\n          let aptInfo = {};\n\n          let address = apt[\"sido\"] + \" \" + apt[\"gugun\"] + \" \" + apt[\"dong\"] + apt[\"jibun\"];\n\n          addressArr.push(address);\n\n          aptInfo.address = address;\n          aptInfo.aptName = apt[\"apartmentName\"];\n          aptInfo.aptPirce = apt[\"dealAmount\"];\n          aptInfo.aptSize = apt[\"area\"];\n          aptInfo.aptYear = apt[\"buildYear\"];\n\n          aptArr.push(aptInfo);\n          let tr = document.createElement(\"tr\");\n\n          let nameTd = document.createElement(\"td\");\n          nameTd.appendChild(document.createTextNode(apt[\"apartmentName\"]));\n          tr.appendChild(nameTd);\n\n          let floorTd = document.createElement(\"td\");\n          floorTd.appendChild(document.createTextNode(apt[\"buildYear\"]));\n          tr.appendChild(floorTd);\n\n          let areaTd = document.createElement(\"td\");\n          areaTd.appendChild(document.createTextNode(apt[\"area\"]));\n          tr.appendChild(areaTd);\n\n          let dongTd = document.createElement(\"td\");\n          dongTd.appendChild(document.createTextNode(apt[\"dong\"]));\n          tr.appendChild(dongTd);\n\n          let priceTd = document.createElement(\"td\");\n          priceTd.appendChild(\n            document.createTextNode(apt[\"dealAmount\"] + \"만원\"),\n          );\n          priceTd.classList.add(\"text-end\");\n          tr.appendChild(priceTd);\n          let dm = this.displayMarker;\n          //마커 생성\n          geocoder.addressSearch(aptInfo.address, function (result, status) {\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) {\n              var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n              //아파트 이름,\n\n              // let overlay = this.displayMarker(coords, aptInfo, map);\n              let overlay = dm(coords, aptInfo, map);\n\n\n              //클릭 이벤트\n              tr.addEventListener(\"click\", () => {\n                //클릭시 map에 중심을 바꿔라\n                map.panTo(coords);\n                //클릭시 오버레이 열기\n                overlay.setMap(map);\n              })\n            } else {\n              console.log(\"검색이 안됨\")\n              console.log(aptInfo.address);\n            }\n          });\n          tbody.appendChild(tr);\n        });\n      }\n    }, //makelist\n\n    displayMarker: function (locPosition, aptInfo, map) {\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: locPosition,\n      });\n      marker.setMap(map);\n\n      let mkWrap = document.createElement(\"div\")\n      mkWrap.className = \"markerWrap\"\n      let info = document.createElement(\"div\")\n      info.className = \"info\"\n      let title = document.createElement(\"div\")\n      title.className = \"title\"\n      title.innerHTML = aptInfo.aptName;\n      let closeBtn = document.createElement(\"button\")\n      closeBtn.className = \"close\"\n      closeBtn.setAttribute(\"title\", \"닫기\")\n      title.appendChild(closeBtn);\n\n      let body = document.createElement(\"div\")\n      body.className = \"body\"\n      body.innerHTML = `<div class=\"desc\" >\n          <div class=\"ellipsis\" style=\"width:100%;height:100%; word-break:break-all;margin-bottom:5px \"><p \">상세주소 : ${aptInfo.address} ${aptInfo.aptName}</p>\n          <p>건축년도 : ${aptInfo.aptYear}</p>\n          <p> 아파트 면적 : ${aptInfo.aptSize}</p>\n          <p>거래 금액 : ${aptInfo.aptPirce}</p>\n          </div>\n      </div>`;\n\n      info.appendChild(title);\n      info.appendChild(body);\n      mkWrap.appendChild(info);\n\n\n      var overlay = new kakao.maps.CustomOverlay({\n        content: mkWrap,\n        map: map,\n        position: marker.getPosition()\n      });\n\n      //오버레이 닫기\n      closeBtn.addEventListener(\"click\", () => {\n        overlay.setMap(null);\n      })\n\n      // 지도 중심좌표를 접속위치로 변경합니다\n      map.setCenter(locPosition);\n\n      //오버레이 열기\n      kakao.maps.event.addListener(marker, 'click', function () {\n        overlay.setMap(map);\n        map.setCenter(locPosition);\n      });\n      closeBtn.dispatchEvent(new Event(\"click\"));\n      return overlay;\n    }, //displayMaker\n\n    async initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3,\n      };\n\n      this.map = new kakao.maps.Map(container, options);\n    },\n    on(type, el, listener, all = false) {\n      let selectEl = this.select(el, all)\n      if (selectEl) {\n        if (all) {\n          selectEl.forEach(e => e.addEventListener(type, listener))\n        } else {\n          selectEl.addEventListener(type, listener)\n        }\n      }\n    },\n    select(el, all = false) {\n\n      el = el.trim()\n      if (all) {\n        return [...document.querySelectorAll(el)]\n      } else {\n        return document.querySelector(el)\n      }\n    },\n    toogleNav() {\n      let navButton = this.select('.nav-toggle')\n      navButton.classList.toggle('nav-toggle-active')\n      navButton.querySelector('i').classList.toggle('bx-x')\n      navButton.querySelector('i').classList.toggle('bx-menu')\n\n      this.select('.nav-menu').classList.toggle('nav-menu-active')\n    },\n    registInterestRegion() {\n      let dongSel = document.querySelector(\"#dong\");\n      let dongcode = dongSel.options[dongSel.selectedIndex].value;\n    \n      console.log(dongcode);\n      let url = `/user.do/registregion/${dongcode}`;\n      http.get(url,  {\n        params: {\n          emailid: this.userInfo.email.id,\n          emaildomain: this.userInfo.email.domain,\n      }}).then(({ data }) => {\n            if (data.resMsg == \"Success OK\") {\n              alert(\"즐겨찾기 성공 !\");\n              this.UserInfo = data.userInfo;\n            }\n            else if(data.resMsg == \"이미 있는 dong 입니다 \") {\n                alert(\"이미 있는 지역입니다\")\n            }\n      });\n    },\n    searchInterestRegion(dong) {\n      http.get(`/map.do/searchDong/${dong}`).then(({ data }) => {\n        this.makeList(data)\n      });\n    },\n  },\n  created() {\n    http.get(`/region.do/sido`).then(({ data }) => {\n      let sidoSel = document.querySelector(\"#sido\");\n      let init = document.createElement(\"option\");\n      init.textContent = \"시도선택\";\n\n      sidoSel.appendChild(init);\n      data.regions.forEach(sido => {\n        let option = document.createElement(\"option\");\n        option.textContent = sido.name;\n        option.value = sido.code;\n\n        sidoSel.appendChild(option);\n      })\n    });\n\n  },\n  watch: {\n    userInfo: function (value) {\n      console.log(\"바뀐 Userinfo\");\n      console.log(value);\n      this.setUserInfo(value);\n    }\n  },\n  computed: {\n    // getUserInfo() {\n    //   return this.userInfo;\n    // }\n    UserInfo: {\n      get() {\n        return this.$store.state.userInfo;\n      },\n      set(value) {\n        this.userInfo = value;\n      }\n    }\n  },\n  mounted() {\n    this.userInfo = this.$store.state.userInfo;\n    if (!window.kakao || !window.kakao.maps) {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=32b7b36540e75a778fb8400e8a821a41&libraries=services\";\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      console.log(\"initMap 끝~!\");\n      document.head.appendChild(script);\n    }\n    else {\n      console.log(\"이미 로딩됨 : \", window.kakao);\n      this.initMap(); \n      console.log(this.map);\n    }\n    if (window.kakao &&window.kakao.maps) {\n      console.log(\"제대로 불러옴\");\n    }\n    // jquery?////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n     \n      \n      \n    var now = this;\n\n      this.on('click', '.nav-menu .drop-down > a', function(e) {\n        e.preventDefault();\n        this.nextElementSibling.classList.toggle('drop-down-active')\n        this.parentElement.classList.toggle('active')\n      }, true)\n\n    this.on('click', '.scrollto', function () {\n      if (now.select(\"#\"+this.id)) {\n          now.select('.nav-menu .active').classList.remove('active')\n          this.parentElement.classList.toggle('active')\n          now.toogleNav();\n        }\n      }, true)\n\n    // jquery?////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style >\n\n  @import \"../assets/vendor/bootstrap/css/bootstrap.min.css\";\n  @import \"../assets/vendor/boxicons/css/boxicons.min.css\";\n  @import \"../assets/css/style.css\";\n  @import \"../assets/css/user.css\";\n  @import \"https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,600,600i,700,700i\";\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}